Feitos:
OK. Organizar os imoveis ativos por ordem de registro do contrato atual deles.
OK. (só mudei a cor da borda) Colocar um deseninho nas card dos ativos (emoji talvez).
OK. (preferi deixar como está pois iria desperdiçar muita memoria no banco de dados) salvar todas as preferencias
            do usuario em um dicionario em uma célula da tabela dele, não em varias como atualmente.
Ok. Contrato não desativa, arrumar.
OK. Os cards nos ativos estão retornando tudo misturado (arrumar).
OK. O botão ir em eventos não funciona de primeira quando não existe o data_eventos_i preenchido no models do usuario.
OK. (resolvido mas com uma pequena gambiarra, utilizando o campo emailed=true pra indicar recibo ok)Destivar o
            botão desnecessário(da vez) no histórico de notificações na offcanvas.
OK. Fake está criando contratos com datas sobresalentes, arrumar.
OK. Criar uma uuid unica para cada usuario, para proteger os arquivos dele(segurança aumentada)
OK. (mantive só o codigo) Quando recriar as parcelas(model.parcelas) ao usuario editar o periodo do contrato, manter
        recibos true p/ os meses q ja receberam recibo(não tão urgente mas bom)(ou manter todas as outras informações).
OK. Apagar a tabela do usuario quando ele terminar a sessão.
OK. Colocar a opção de data preenchida nos recibos.
OK. (fiz um pouco diferente, usei o model das anotações)Criar uma barra laterial com afazeres, dp it latter simples.
OK. Ao excluir uma anotação, excluir a tarefa dela tbm.
OK. (mantive nas sessions (pois em cookies tem limite de characteres e problemas de ms) mas com tempo limite,
        configurável, em settings.py)Salvar as forms com erros em cookies, não na session, economiza memória do
        servidor e coloca tempo limite de duração.
OK. (usei o built-in do django, jango.template.defaultfilters)Colocar em português manualmente na tabea e nos recibos
        e outros q usem.
OK. AS vezes o recibo não obedece a form do usuario(preenchimento de data). arrumar.
OK. Arrumar o UsuarioAdmin no admin.py.
OK. Concluir total_quitado e faltando_p_quitar de contratos.
OK. Arrumar tabela onde contratos mantém 'O Pagam. VENCEU' até mesmo qdo vencimento se encontra depois do dia atual,
        quando algum contrato existia e foi apagado antes do novo ser criado.
OK. Validar registros dos usuario impedindo que eles cadastrem locatarios ou imoveis duplicados.
OK. (e ainda consertei varios bugs no caminho) Criar formulario de locatario: endereço, para contratos não residenciais.
OK. Adiconar possibilidade de criar um gasto geral, não exclusivo de algum imóvel.
OK. Arrumar CLÁUSULA DÉCIMA PRIMEIRA do contrato, opção casa ou prédio.
OK. Algmas listas devem mostrar apenas os contratos ativos, não tudo.
OK. (Falta configurar, no fim do projeto) Aplicar o django allauth https://www.youtube.com/watch?v=Q4Q3S7HLp4w
OK. Melhorar o sistema de fale com o desenvolvedor, colocando um mini fórum onde os usuario dão sugestões de melhorias
        com sistema de votação.
Ok. Proteger os arquivos dos usuarios, todos da pasta media, para que não sejam acessados por outros usuario que não os
 criadores ou pela internet por qualquer um.
OK. Aplicar o cursor pointer em alguns itens nos templates. (copia logo pae: style="cursor:pointer;")
OK. (refatorei tudo praticamente) Tarefas apagam ou ficam bugadas quando se mexe no periodo do contrato ou se
        apaga algum registro de pagamento.
OK. Corrigir as tabelas duplas no histórico, cor sim 'cornão'.
OK. Implementar filtros na página 'visão geral', com cliques nos títulos das colunas.


Fazer:
Ajeitar as urls que pedem <int:pk> sem necessidade(as views nem usam).
Criar o sistema de rentabilização do site.
Lembretes: Tarefa receber contrato(marcar contrato como em mãos na tarefa). Quando a sugestão do usuário for aprovada.
 Quando o aluguel de alguém vencer(e faltando 5 dias). Quando o contrato de alguém vencer(e faltando 30 dias).
Criar a função comunidade no editor de modelos.
Criar um botão de painel com configurações diversas e botão de backup de todos os dados, bem como, botão de restaurar.
Implementar filtros/buscas nas paginas do botão histórico.
Criar o sistema de primeira inicialização do app, criar pastas, preencher base de dados com os
        dado padrões (ex: modelos de constratos) e etc...
Adaptar o site para celulares.
Arrumar e organizar, deixar otimizado o painel administrativo completo.
Criar um link, chamado link de requisição, próprio de cada usuário, que ele envia para o locatário, para que o
        locatário, através dele, possa cadastrar suas informações para o preenchimento do contrato. Quando cadastrado,
        o usuário recebe uma notificação de aviso para dar procedimento, criando o contrato para este locatário.
Mostrar no visão geral o total por grupo de imóveis e por tipo.
Aplicar o redis cache https://youtu.be/7rc5KA0nrwk


PROBLEMAS encontrados, SEM SOLUÇÃO até agora:
signal post_delete não é chamado quando é deletado pela area admin do site
pk do usuario deve ser aleatorio e grande, não sequencial desde o 1, arrumar
Arrumar os parâmetros das models que estão em letras maiúsculas, corrigir também nas forms.

Melhorias futuras:
Dar uma geral no painel do admin, deixar tudo bem organizado
Aplicar o https://datatables.net/, tabelas mais inteligentes.
Criar o help (sistema de dicas e recomendações espalhados por to_do o site, referentes ao manuseio do mesmo e a regras
        e dicas de locação)
Confirmação de email e celular.
Criptografar informações sensíveis no banco de dados(ex: cpf dos locatarios)
melhorar a performance nas querys: https://www.youtube.com/watch?v=FNn_qwH1Yi0
aplicar ajax um dia: https://www.youtube.com/watch?v=hISSGMafzvU / https://www.youtube.com/watch?v=QDdLvImfq_g
aplicar atomicidade no gerencimanto do banco de dados: https://www.youtube.com/watch?v=50N400-3MTI
Aplicar o celery.
